/**
 * Created by Allan on 2021/04/09.
 * Contact 84880528@qq.com.
 */
//## 基础样式
//## 参考教程  http://www.ruanyifeng.com/blog/2012/06/sass.html
$gray-base: #000;
$gray-darker: lighten($gray-base, 13.5%); // #222
$gray-dark: lighten($gray-base, 20%); // #333 黑色字体颜色
$gray: lighten($gray-base, 40%); // #666
$gray-light: lighten($gray-base, 46.7%); // #777
$gray-lighter: lighten($gray-base, 53%); // #888
$gray-highlight: lighten($gray-base, 60%); // #999
$gray-superlight: lighten($gray-base, 93%); // #eee
$gray-background: lighten($gray-base, 95%); // #f1f1f1
$gray-background-a: lighten($gray-base, 98%); // #fbfbfb
$gray-background-c: lighten($gray-base, 80%); // #ccc
$list-item-bottom: #F0F0F0; //边框颜色
$gray-border: lighten($gray-base, 89%); // #e3e3e3  border color
$gray-border-light: lighten($gray-base, 91.2%); // #e9e9e9  border color
$gray-border-f5: lighten($gray-base, 96%); // #f5f5f5  border color
$color-base:#33426D; //主题色
$color-write:#fff; //白色
$button-5378F6:#5378F6;  //按钮颜色
$body-background:#EBEBEB;
$mask-background:rgba(0,0,0,0.14);  //box-shadow 颜色
$bg-background:rgba(0,0,0,0.4);     //背景遮罩
//辅助颜色
$bg-red:#f5222d;
$bg-1890ff:#1890ff;
$bg-D9E1F2:#D9E1F2;
$background-F3F3F3:#F3F3F3;
$background-FF3B30:#FF3B30;
$background-52c41a:#52c41a;
$background-E46464:#E46464;
$background-e6e6e6:#e6e6e6;
$background-E62226:#E62226;

$color-409EFF:#409EFF;
$color-be0101:#be0101;
$color-017f01:#017f01;
$color-67757c:#67757c;
$color-9b:#9b9b9b;


// Flexbox Mixins
// --------------------------------------------------
//容器属性 定义Flex容器盒子
//设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。
@mixin display-flex {
	display: -webkit-box;
	display: -webkit-flex;
	display: -moz-box;
	display: -moz-flex;
	display: -ms-flexbox;
	display: flex;
	}
//容器属性 行内元素Flex布局。
@mixin display-inline-flex {
	display: -webkit-inline-box;
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;
	}
/****
* 容器属性
* 内容排列方向  flex-direction属性决定主轴的方向（即项目的排列方向）。
* row（默认值）：主轴为水平方向，起点在左端。
* row-reverse：主轴为水平方向，起点在右端。
* column：主轴为垂直方向，起点在上沿。
* column-reverse：主轴为垂直方向，起点在下沿。
*****/

@mixin flex-direction($value: row) {
	@if $value == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
		} @else if $value == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
		} @else if $value == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
		} @else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
		}
	-webkit-flex-direction: $value;
	-moz-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
	}
/**
* 容器属性
* 布局元素一排不下时，如何换行
* @params nowrap 不换行
* @params wrap 换行，第一行在上方
* @params wrap-reverse  换行，第一行在下方
*/
@mixin flex-wrap($value: nowrap) {
	-webkit-flex-wrap: $value;
	-moz-flex-wrap: $value;
	@if $value == nowrap {
		-ms-flex-wrap: none;
		} @else {
		-ms-flex-wrap: $value;
		}
	flex-wrap: $value;
	}
/***
* flex-flow
* 容器属性  是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。
**/
@mixin flex-flow($values: (row nowrap)) {
	// No Webkit Box fallback.
	-webkit-flex-flow: $values;
	-moz-flex-flow: $values;
	-ms-flex-flow: $values;
	flex-flow: $values;
	}
/**
* align-items
* 容器属性  元素的 垂直对齐
* @flex-start     元素的顶端对齐 并靠元素的顶端分布
* @flex-end       元素的底部对齐 并靠容器的底部分布
* @center         容器中垂直居中，并每个元素的中心点对齐
* @baseline       项目的第一行文字的基线对齐。
* @stretch        （默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
*/
@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
		-ms-flex-align: start;
		} @else if $value == flex-end {
		-webkit-box-align: end;
		-ms-flex-align: end;
		} @else {
		-webkit-box-align: $value;
		-ms-flex-align: $value;
		}
	-webkit-align-items: $value;
	-moz-align-items: $value;
	align-items: $value;
	}
/**
* justify-content
* 容器属性  元素的 水平对齐和分布方式
* @flex-start     左对齐
* @flex-end       右对齐
* @center         居中
* @space-between  两端对齐，项目之间的间隔都相等，与边框没有间距
* @space-around   每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
*/
@mixin justify-content($value: stretch) {
	@if $value == flex-start {
		-webkit-box-pack: start;
		-ms-flex-pack: start;
		} @else if $value == flex-end {
		-webkit-box-pack: end;
		-ms-flex-pack: end;
		} @else if $value == space-between {
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
		} @else {
		-webkit-box-pack: $value;
		-ms-flex-pack: $value;
		}
	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	justify-content: $value;
	}
/**
* align-content
* 容器属性
* 属性定义了多根轴线的对齐方式。项目达到多行时的分布方式，如果项目只有一行，该属性不起作用。
* @params flex-start 靠容器项端分布
* @params flex-end 靠容器底部分布
* @params center  垂直居中分布
* @params space-between  垂直平均分布
* @params space-around  每行元素的上下间距相等，因此每行之间的间隔要 比首行和未行 与边框的间隔大一倍
* @params stretch  垂直拉伸占满整个容器
*/
@mixin align-content($value: stretch) {
	-webkit-align-content: $value;
	-moz-align-content: $value;
	@if $value == flex-start {
		-ms-flex-line-pack: start;
		} @else if $value == flex-end {
		-ms-flex-line-pack: end;
		} @else {
		-ms-flex-line-pack: $value;
		}
	align-content: $value;
	}
/**
* 子元素的属性 Flex, 有三个属性，是 flex-grow, flex-shrink 和 flex-basis的简写方式
*
* @$fg=flex-grow
* 属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大，属性都为1，则它们将等分剩余空间
*
* @$fs=flex-shrink
* 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
* flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。

* @$fb =  flex-basis
* 设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。
*它的默认值为auto，即项目的本来大小
*/
@mixin flex($fg: 1, $fs: null, $fb: null) {
	-webkit-box-flex: $fg;
	-webkit-flex: $fg $fs $fb;
	-moz-box-flex: $fg;
	-moz-flex: $fg $fs $fb;
	-ms-flex: $fg $fs $fb;
	flex: $fg $fs $fb;
	}
/***
* align-self
* 子元素的属性
* 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。
* 默认值为auto，表示继承父元素的align-items属性
* 属性可能取6个值，除了auto，其他都与align-items属性完全一致
**/
@mixin align-self($value: auto) {
	-webkit-align-self: $value;
	-moz-align-self: $value;
	@if $value == flex-start {
		-ms-flex-item-align: start;
		} @else if $value == flex-end {
		-ms-flex-item-align: end;
		} @else {
		-ms-flex-item-align: $value;
		}
	align-self: $value;
	}
/***
* order
* 子元素的属性
* 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。
**/
@mixin flex-order($n) {
	-webkit-order: $n;
	-ms-flex-order: $n;
	order: $n;
	-webkit-box-ordinal-group: $n;
	}
/*文字超出隐藏，显示...,$value显示几行文字*/
@mixin text-overflow($value){
	overflow:hidden;
	text-overflow:ellipsis;
	display:-webkit-box;
	display:-moz-box;
	-webkit-box-orient:vertical;
	-webkit-line-clamp:$value;
	}
/*图标加载*/
@mixin ico_base($value,$width,$height){
	width:$width;
	height:$height;
	background-size:$width $height;
	background-image:url('#{$value}');
	background-repeat:no-repeat;
	}
@mixin ico_cove($value,$width,$height){
	width:$width;
	height:$height;
	background-image:url('#{$value}');
	background-repeat:no-repeat;
	}
@mixin outer{
  zoom:1;
  &:after{
    content:'';
    clear:both;
    display:block;
    width:0;
    height:0;
    visibility:hidden;
  }
}
